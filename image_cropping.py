# -*- coding: utf-8 -*-
"""Image_Cropping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LEnckZ0kMA82ebjMIE5l8fSo4dwUdzwW
"""

import cv2
import os
import random
import numpy as np 
import matplotlib.pyplot as plt 

img = cv2.imread("img/test.jpg")
img = cv2.resize(img,(625,810))
plt.imshow(img)
print(img.shape)

dir = r"img"
catagories = ['bbox','fbox']

data = list()
for catagory in catagories:
  folder = os.path.join(dir,catagory)
  print(folder)
  label = catagories.index(catagory)

  for img in os.listdir(folder):
    img = os.path.join(folder,img)
    #print(img)
    img_arr = cv2.imread(img)
    data.append([img_arr,label])

random.shuffle(data)

x = list()
y = list()
for features,label in data:
  x.append(features)
  y.append(label)

print(y)

x = np.array(x)
y = np.array(y)
print(y)

x = x/255
#print(x)

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPooling2D,Flatten,Dense,Activation

model = Sequential()
model.add(Conv2D(30,(3,3),input_shape=x.shape[1:],activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(30,(3,3),input_shape=x.shape[1:],activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(2,activation='softmax'))

model.compile(loss='sparse_categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

model.fit(x,y,epochs=5,validation_split=0.1)